-- More Scripts: https://controlc.com/5572471c

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==7) then function v30(v31,v32,v33)local v34=0;local v35;local v36;local v37;while true do if (1==v34) then v37=v31[3];return function(...)local v86=v35;local v87=v36;local v88=v37;local v89=v28;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v12("#",...) -1 ;local v95={};local v96={};for v100=0,v94 do if (v100>=v88) then v92[v100-v88 ]=v93[v100 + 1 ];else v96[v100]=v93[v100 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v101=0;while true do if (0==v101) then v98=v86[v90];v99=v98[1];v101=1;end if (v101==1) then if (v99<=32) then if (v99<=15) then if (v99<=7) then if (v99<=3) then if (v99<=1) then if (v99>0) then v96[v98[2]]=v98[3]~=0 ;else local v123=v98[2];local v124,v125=v89(v96[v123](v13(v96,v123 + 1 ,v98[3])));v91=(v125 + v123) -1 ;local v126=0;for v226=v123,v91 do v126=v126 + 1 ;v96[v226]=v124[v126];end end elseif (v99>2) then local v127=0;local v128;local v129;local v130;while true do if (v127==1) then v130=v98[3];for v294=1,v130 do v129[v294]=v96[v128 + v294 ];end break;end if (v127==0) then v128=v98[2];v129=v96[v128];v127=1;end end elseif (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=5) then if (v99>4) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v131=0;local v132;local v133;while true do if (v131==0) then v132=v98[3];v133=v96[v132];v131=1;end if (v131==1) then for v297=v132 + 1 ,v98[4] do v133=v133   .. v96[v297] ;end v96[v98[2]]=v133;break;end end end elseif (v99==6) then v33[v98[3]]=v96[v98[2]];else local v136=0;local v137;while true do if (v136==0) then v137=v98[2];v96[v137]=v96[v137]();break;end end end elseif (v99<=11) then if (v99<=9) then if (v99>8) then v96[v98[2]]=v98[3]~=0 ;else local v139=0;local v140;while true do if (v139==0) then v140=v98[2];do return v13(v96,v140,v140 + v98[3] );end break;end end end elseif (v99>10) then for v229=v98[2],v98[3] do v96[v229]=nil;end else v96[v98[2]]={};end elseif (v99<=13) then if (v99==12) then local v142=v98[2];v96[v142](v13(v96,v142 + 1 ,v98[3]));else v96[v98[2]][v98[3]]=v96[v98[4]];end elseif (v99>14) then local v145=v98[2];v96[v145]=v96[v145](v13(v96,v145 + 1 ,v91));else local v147=0;local v148;local v149;while true do if (v147==1) then v96[v148 + 1 ]=v149;v96[v148]=v149[v98[4]];break;end if (v147==0) then v148=v98[2];v149=v96[v98[3]];v147=1;end end end elseif (v99<=23) then if (v99<=19) then if (v99<=17) then if (v99>16) then local v150=v98[2];local v151=v98[4];local v152=v150 + 2 ;local v153={v96[v150](v96[v150 + 1 ],v96[v152])};for v231=1,v151 do v96[v152 + v231 ]=v153[v231];end local v154=v153[1];if v154 then v96[v152]=v154;v90=v98[3];else v90=v90 + 1 ;end else v96[v98[2]]= -v96[v98[3]];end elseif (v99==18) then local v156=0;local v157;local v158;while true do if (v156==0) then v157=v98[2];v158=v96[v98[3]];v156=1;end if (v156==1) then v96[v157 + 1 ]=v158;v96[v157]=v158[v98[4]];break;end end else local v159=v98[2];v96[v159]=v96[v159](v96[v159 + 1 ]);end elseif (v99<=21) then if (v99==20) then local v161=0;local v162;local v163;while true do if (v161==0) then v162=v98[2];v163=v96[v162];v161=1;end if (1==v161) then for v298=v162 + 1 ,v98[3] do v7(v163,v96[v298]);end break;end end else v90=v98[3];end elseif (v99>22) then v96[v98[2]]=v98[3];else local v167=0;local v168;local v169;local v170;while true do if (v167==0) then v168=v98[2];v169={v96[v168](v96[v168 + 1 ])};v167=1;end if (v167==1) then v170=0;for v299=v168,v98[4] do v170=v170 + 1 ;v96[v299]=v169[v170];end break;end end end elseif (v99<=27) then if (v99<=25) then if (v99>24) then v96[v98[2]]();else local v171=v98[2];local v172=v98[4];local v173=v171 + 2 ;local v174={v96[v171](v96[v171 + 1 ],v96[v173])};for v234=1,v172 do v96[v173 + v234 ]=v174[v234];end local v175=v174[1];if v175 then local v255=0;while true do if (v255==0) then v96[v173]=v175;v90=v98[3];break;end end else v90=v90 + 1 ;end end elseif (v99>26) then for v237=v98[2],v98[3] do v96[v237]=nil;end else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=29) then if (v99==28) then local v178=v98[2];local v179={v96[v178](v96[v178 + 1 ])};local v180=0;for v239=v178,v98[4] do v180=v180 + 1 ;v96[v239]=v179[v180];end else v96[v98[2]]=v30(v87[v98[3]],nil,v33);end elseif (v99<=30) then local v182=v98[2];v96[v182]=v96[v182](v96[v182 + 1 ]);elseif (v99>31) then local v256=0;local v257;while true do if (v256==0) then v257=v98[2];v96[v257]=v96[v257](v13(v96,v257 + 1 ,v98[3]));break;end end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=48) then if (v99<=40) then if (v99<=36) then if (v99<=34) then if (v99>33) then local v184=v98[2];v96[v184]=v96[v184](v13(v96,v184 + 1 ,v91));elseif (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==35) then local v186=v98[2];v96[v186]=v96[v186](v13(v96,v186 + 1 ,v98[3]));else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=38) then if (v99>37) then v90=v98[3];else v96[v98[2]]=v96[v98[3]];end elseif (v99>39) then local v193=0;local v194;while true do if (0==v193) then v194=v98[2];v96[v194]=v96[v194]();break;end end else v96[v98[2]]=v98[3];end elseif (v99<=44) then if (v99<=42) then if (v99>41) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]][v98[3]]=v98[4];end elseif (v99==43) then v33[v98[3]]=v96[v98[2]];else v96[v98[2]]=v33[v98[3]];end elseif (v99<=46) then if (v99>45) then v96[v98[2]]={};else local v204=v98[2];local v205=v96[v204];local v206=v98[3];for v242=1,v206 do v205[v242]=v96[v204 + v242 ];end end elseif (v99==47) then do return v96[v98[2]];end else local v207=v98[3];local v208=v96[v207];for v245=v207 + 1 ,v98[4] do v208=v208   .. v96[v245] ;end v96[v98[2]]=v208;end elseif (v99<=56) then if (v99<=52) then if (v99<=50) then if (v99==49) then do return;end else do return;end end elseif (v99==51) then v96[v98[2]]=v30(v87[v98[3]],nil,v33);else local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==2) then for v302=v212,v91 do v215=v215 + 1 ;v96[v302]=v213[v215];end break;end if (v211==1) then v91=(v214 + v212) -1 ;v215=0;v211=2;end if (v211==0) then v212=v98[2];v213,v214=v89(v96[v212](v13(v96,v212 + 1 ,v98[3])));v211=1;end end end elseif (v99<=54) then if (v99==53) then do return v96[v98[2]];end else local v216=0;local v217;while true do if (v216==0) then v217=v98[2];v96[v217](v96[v217 + 1 ]);break;end end end elseif (v99==55) then v96[v98[2]]=v96[v98[3]];else local v220=v98[2];v96[v220](v13(v96,v220 + 1 ,v98[3]));end elseif (v99<=60) then if (v99<=58) then if (v99>57) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]();end elseif (v99>59) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=62) then if (v99==61) then local v221=0;local v222;while true do if (v221==0) then v222=v98[2];v96[v222](v96[v222 + 1 ]);break;end end else v96[v98[2]]= -v96[v98[3]];end elseif (v99<=63) then v96[v98[2]]=v33[v98[3]];elseif (v99==64) then v96[v98[2]][v98[3]]=v96[v98[4]];elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end v90=v90 + 1 ;break;end end end end;end if (v34==0) then v35=v31[1];v36=v31[2];v34=1;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v38,v39,v40)if v40 then local v73=0 -0 ;local v74;while true do if (v73==(0 -0)) then v74=(v38/((3 -1)^(v39-1)))%(((4 + 0) -2)^(((v40-(620 -(555 + 64))) -(v39-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v74-(v74%(928 -(214 + 713))) ;end end else local v75=0 + 0 ;local v76;while true do if (v75==(0 + 0)) then v76=(879 -((401 -119) + 595))^(v39-1) ;return (((v38%(v76 + v76))>=v76) and (1638 -(1523 + 114))) or 0 ;end end end end v22=nil;v18=2;end if (v18==2) then function v22()local v41=1065 -(68 + 997) ;local v42;while true do if (0==v41) then v42=v1(v16,v19,v19);v19=v19 + (1271 -(226 + 1044)) ;v41=4 -3 ;end if ((118 -(32 + 84 + 1))==v41) then return v42;end end end v23=nil;function v23()local v43=0 + 0 ;local v44;local v45;while true do if (v43==(958 -(892 + 65))) then return (v45 * (610 -354)) + v44 ;end if (v43==(0 -0)) then v44,v45=v1(v16,v19,v19 + ((3 + 0) -1) );v19=v19 + (352 -((213 -126) + 263)) ;v43=181 -(67 + 113) ;end end end v18=3;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v46)if (v1(v46,2)==79) then v20=v0(v3(v46,1,1));return "";else local v77=0;local v78;while true do if (v77==0) then v78=v2(v0(v46,16));if v20 then local v110=v5(v78,v20);v20=nil;return v110;else return v78;end break;end end end end);v18=1;end if (v18==4) then function v25()local v47=0 + 0 ;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==(3 -2)) then v50=953 -(802 + 150) ;v51=(v21(v49,1 + 0 ,53 -33 ) * (((3 + 0) -1)^(24 + 8))) + v48 ;v47=999 -((1687 -(201 + 571)) + 82) ;end if (v47==(5 -3)) then v52=v21(v49,13 + (1146 -(116 + 1022)) ,40 -9 );v53=((v21(v49,1219 -((4450 -3381) + 118) )==(2 -1)) and  -1) or (1 -0) ;v47=1 + 2 + 0 ;end if (v47==(4 -1)) then if (v52==(0 + 0)) then if (v51==((2887 -2096) -(368 + 423))) then return v53 * (0 -0) ;else local v111=18 -(10 + 8) ;while true do if (v111==(0 -0)) then v52=443 -(416 + 26) ;v50=0;break;end end end elseif (v52==(6535 -4488)) then return ((v51==(0 + (0 -0))) and (v53 * (1/(0 -0)))) or (v53 * NaN) ;end return v8(v53,v52-1023 ) * (v50 + (v51/(2^(490 -(145 + 293))))) ;end if (v47==(430 -(44 + 386))) then v48=v24();v49=v24();v47=1487 -(998 + 488) ;end end end v26=nil;function v26(v54)local v55;if  not v54 then local v79=0;while true do if (((1744 -(261 + 624)) -(814 + 45))==v79) then v54=v24();if (v54==(0 -0)) then return "";end break;end end end v55=v3(v16,v19,(v19 + v54) -(1 + 0) );v19=v19 + v54 ;local v56={};for v71=1 + 0 , #v55 do v56[v71]=v2(v1(v3(v55,v71,v71)));end return v6(v56);end v18=5;end if (v18==6) then v29=nil;function v29()local v57=1121 -(118 + 1003) ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if ((8 -5)~=v57) then else v64=nil;v65=nil;v57=381 -(142 + 235) ;end if ((18 -14)~=v57) then else while true do if (v58==(337 -(10 + 327))) then local v102=0;local v103;while true do if (v102~=(0 + 0)) then else v103=977 -(553 + 424) ;while true do if ((0 -0)==v103) then local v117=0 + 0 ;while true do if (v117~=(1 + 0)) then else v103=339 -(118 + 220) ;break;end if ((0 + 0)==v117) then v59=0;v60=nil;v117=1 + 0 ;end end end if (v103==(1 + 0)) then v58=1 + 0 ;break;end end break;end end end if (v58~=3) then else v65=nil;while true do local v112=0 -0 ;local v113;local v114;while true do if (v112~=(1494 -(711 + 782))) then else while true do if (v113~=(0 -0)) then else v114=0 -0 ;while true do if (v114==(2 -1)) then if (v59==1) then local v120=0 + 0 ;local v121;while true do if (v120~=(0 + 0)) then else v121=0;while true do if (v121==1) then local v306=0;local v307;while true do if ((0 -0)==v306) then v307=1819 -(580 + 1239) ;while true do if (v307==1) then v121=755 -(239 + 514) ;break;end if (v307~=0) then else local v317=0 + 0 ;while true do if (1~=v317) then else v307=2 -1 ;break;end if (v317==(0 + 0)) then for v320=1330 -(797 + 532) ,v64 do local v321=0 + 0 ;local v322;local v323;local v324;local v325;while true do if (v321==(1 + 0)) then v324=nil;v325=nil;v321=1 + 1 ;end if (v321==(0 -0)) then v322=0;v323=nil;v321=1203 -(373 + 829) ;end if (v321==(733 -(476 + 255))) then while true do if (v322==0) then local v328=0;local v329;while true do if (0~=v328) then else v329=1130 -(369 + 761) ;while true do if (v329~=(1791 -(1010 + 780))) then else v322=1 + 0 ;break;end if (v329==(0 -0)) then local v342=0 -0 ;while true do if (v342==0) then v323=238 -(64 + 174) ;v324=nil;v342=1 + 0 ;end if (v342~=1) then else v329=1 -0 ;break;end end end end break;end end end if (v322~=1) then else v325=nil;while true do if (v323==(0 -0)) then local v330=0;local v331;local v332;while true do if (v330~=(337 -(144 + 192))) then else while true do if (v331==(216 -(42 + 174))) then v332=0 -0 ;while true do if ((1 + 0)==v332) then v323=1 + 0 ;break;end if ((1574 -(1281 + 293))~=v332) then else local v344=0 + 0 ;while true do if ((1505 -(363 + 1141))==v344) then v332=1581 -(1183 + 397) ;break;end if (v344==(0 -0)) then v324=v22();v325=nil;v344=1 + 0 ;end end end end break;end end break;end if (v330~=(1559 -(1381 + 178))) then else v331=0 + 0 ;v332=nil;v330=1;end end end if ((1 + 0)==v323) then if (v324==(1 + 0)) then v325=v22()~=(1975 -(1913 + 62)) ;elseif (v324==(6 -4)) then v325=v25();elseif (v324~=(2 + 1)) then else v325=v26();end v65[v320]=v325;break;end end break;end end break;end end end v63[3]=v22();v317=1;end end end end break;end end end if (v121==0) then v64=v24();v65={};v121=471 -(381 + 89) ;end if (v121~=(5 -3)) then else v59=2 + 0 ;break;end end break;end end end break;end if ((0 + 0)==v114) then local v119=0 -0 ;while true do if ((1934 -(565 + 1368))==v119) then v114=3 -2 ;break;end if ((1784 -(214 + 1570))==v119) then if (v59==0) then local v246=1455 -(990 + 465) ;local v247;while true do if (v246==0) then v247=0;while true do if (v247==(1663 -(1477 + 184))) then v59=1 -0 ;break;end if ((1 + 0)==v247) then local v312=0;local v313;while true do if (v312~=0) then else v313=0 + 0 ;while true do if (v313==0) then v62={};v63={v60,v61,nil,v62};v313=2 -1 ;end if (v313~=(305 -(244 + 60))) then else v247=2 + 0 ;break;end end break;end end end if (v247==(476 -(41 + 435))) then local v314=1001 -(938 + 63) ;while true do if (v314==(0 + 0)) then local v318=0 -0 ;while true do if (v318==1) then v314=1 -0 ;break;end if ((1125 -(936 + 189))==v318) then v60={};v61={};v318=1 + 0 ;end end end if (v314==(1614 -(1565 + 48))) then v247=1 + 0 ;break;end end end end break;end end end if (v59~=(6 -4)) then else local v248=0;local v249;local v250;while true do if (v248~=(1995 -(109 + 1885))) then else while true do if (v249==0) then v250=1469 -(1269 + 200) ;while true do local v315=0 + 0 ;local v316;while true do if (v315~=0) then else v316=0;while true do if (v316==(1138 -(782 + 356))) then if (v250==(267 -(176 + 91))) then local v326=0 -0 ;while true do if (v326==0) then local v327=0;while true do if (v327~=(815 -(98 + 717))) then else for v334=1 -0 ,v24() do local v335=0;local v336;local v337;local v338;local v339;while true do if ((1094 -(975 + 117))~=v335) then else while true do if (v336==(1876 -(157 + 1718))) then v339=nil;while true do if (v337==(0 -0)) then local v345=0;local v346;while true do if (v345~=(0 + 0)) then else v346=0 + 0 ;while true do if ((3 -2)==v346) then v337=1;break;end if (0==v346) then local v352=0 -0 ;while true do if (v352~=(1018 -(697 + 321))) then else v338=0 -0 ;v339=nil;v352=3 -2 ;end if (v352~=1) then else v346=1 -0 ;break;end end end end break;end end end if ((2 -1)~=v337) then else while true do if (v338==0) then v339=v22();if (v21(v339,1 + 0 ,1 -0 )~=(0 + 0)) then else local v347=0 + 0 ;local v348;local v349;local v350;local v351;while true do if (v347~=(1435 -(797 + 636))) then else while true do if (v348==(9 -7)) then local v353=0 -0 ;while true do if (v353~=(1 + 0)) then else v348=3;break;end if (v353==(1227 -(322 + 905))) then local v361=611 -(602 + 9) ;while true do if (v361==(1190 -(449 + 740))) then v353=2 -1 ;break;end if (v361~=(872 -(826 + 46))) then else if (v21(v350,1,948 -(245 + 702) )~=1) then else v351[6 -4 ]=v65[v351[1278 -(316 + 960) ]];end if (v21(v350,2,2 + 0 )==1) then v351[3]=v65[v351[1 + 2 ]];end v361=1;end end end end end if ((3 + 0)==v348) then if (v21(v350,1901 -(260 + 1638) ,11 -8 )==1) then v351[444 -(382 + 58) ]=v65[v351[12 -8 ]];end v60[v334]=v351;break;end if (v348==(0 + 0)) then local v355=0 -0 ;local v356;while true do if (v355~=(0 -0)) then else v356=1205 -(902 + 303) ;while true do if ((1806 -(1202 + 604))==v356) then local v362=0 -0 ;while true do if (v362==(0 -0)) then v349=v21(v339,2 -0 ,1 + 2 );v350=v21(v339,1694 -(1121 + 569) ,220 -(22 + 192) );v362=1;end if (v362==(684 -(483 + 200))) then v356=2 -1 ;break;end end end if (v356~=(1464 -(1404 + 59))) then else v348=1;break;end end break;end end end if ((2 -1)==v348) then local v357=0 + 0 ;local v358;while true do if (v357==(0 -0)) then v358=0;while true do if (v358==0) then local v363=765 -(468 + 297) ;while true do if (v363==(563 -(334 + 228))) then v358=1;break;end if (v363==(0 -0)) then v351={v23(),v23(),nil,nil};if (v349==(0 + 0)) then local v368=0 + 0 ;local v369;local v370;local v371;while true do if (v368==(237 -(141 + 95))) then v371=nil;while true do if (v369==(1 + 0)) then while true do if (v370~=(0 -0)) then else v371=0 -0 ;while true do if (0==v371) then v351[1 + 2 ]=v23();v351[10 -6 ]=v23();break;end end break;end end break;end if (v369~=0) then else local v374=0 + 0 ;while true do if ((1 + 0)==v374) then v369=1 -0 ;break;end if (v374==(0 + 0)) then v370=0 + 0 ;v371=nil;v374=1 + 0 ;end end end end break;end if ((163 -(92 + 71))~=v368) then else v369=0 + 0 ;v370=nil;v368=513 -(409 + 103) ;end end elseif (v349==(237 -(46 + 190))) then v351[4 -1 ]=v24();elseif (v349==(97 -(51 + 44))) then v351[3]=v24() -(2^(781 -(574 + 191))) ;elseif (v349==(3 + 0)) then local v375=0 -0 ;local v376;local v377;local v378;while true do if (v375==1) then v378=nil;while true do if (v376==(1 + 0)) then while true do if (v377==(849 -(254 + 595))) then v378=0 + 0 ;while true do if (v378==(126 -(55 + 71))) then v351[3 -0 ]=v24() -((5 -3)^(1806 -(573 + 1217))) ;v351[10 -6 ]=v23();break;end end break;end end break;end if (v376~=(0 + 0)) then else local v381=1269 -(231 + 1038) ;while true do if ((0 -0)==v381) then v377=939 -(714 + 225) ;v378=nil;v381=2 -1 ;end if (1==v381) then v376=1 -0 ;break;end end end end break;end if ((0 + 0)==v375) then v376=0 -0 ;v377=nil;v375=807 -(118 + 688) ;end end end v363=1 + 0 ;end end end if (v358~=(3 -2)) then else v348=50 -(25 + 23) ;break;end end break;end end end end break;end if (v347==(1 -0)) then v350=nil;v351=nil;v347=1 + 1 ;end if (v347==(1886 -(927 + 959))) then v348=0 -0 ;v349=nil;v347=1;end end end break;end end break;end end break;end if (v336==0) then local v343=0 -0 ;while true do if (v343==(732 -(16 + 716))) then v337=0 -0 ;v338=nil;v343=98 -(11 + 86) ;end if (v343==(2 -1)) then v336=524 -(423 + 100) ;break;end end end end break;end if (1==v335) then v338=nil;v339=nil;v335=287 -(175 + 110) ;end if (v335==0) then v336=0;v337=nil;v335=1 + 0 ;end end end for v340=2 -1 ,v24() do v61[v340-(2 -1) ]=v29();end v327=4 -3 ;end if (v327~=(1797 -(503 + 1293))) then else v326=2 -1 ;break;end end end if (v326==(4 -3)) then v250=2 -1 ;break;end end end if (v250==(2 -1)) then return v63;end break;end end break;end end end break;end end break;end if (v248~=(711 -(530 + 181))) then else v249=0 + 0 ;v250=nil;v248=33 -(19 + 13) ;end end end v119=1 -0 ;end end end end break;end end break;end if (v112==0) then v113=1061 -(810 + 251) ;v114=nil;v112=1 + 0 ;end end end break;end if (v58==(1 + 1)) then local v104=0 + 0 ;local v105;while true do if (v104==(533 -(43 + 490))) then v105=0;while true do if (v105==(733 -(711 + 22))) then local v118=0;while true do if (v118==1) then v105=3 -2 ;break;end if (v118==0) then v63=nil;v64=nil;v118=1 -0 ;end end end if (v105==(2 -1)) then v58=862 -(240 + 619) ;break;end end break;end end end if (v58~=(1 + 0)) then else v61=nil;v62=nil;v58=8 -6 ;end end break;end if (v57==(0 -0)) then local v83=0 + 0 ;while true do if (v83~=(1744 -(1344 + 400))) then else v58=405 -(255 + 150) ;v59=nil;v83=1 + 0 ;end if (v83==(1 + 0)) then v57=1;break;end end end if (v57==2) then local v84=0;while true do if (v84~=(0 + 0)) then else v62=nil;v63=nil;v84=4 -3 ;end if (v84~=(1 + 0)) then else v57=9 -6 ;break;end end end if (v57==1) then local v85=0;while true do if (v85==(1740 -(404 + 1335))) then v57=408 -(183 + 223) ;break;end if (v85==(0 -0)) then v60=nil;v61=nil;v85=1;end end end end end v30=nil;v18=7;end if (v18==3) then v24=nil;function v24()local v66=0 + 0 ;local v67;local v68;local v69;local v70;while true do if (v66==1) then return (v70 * (10484344 + (10353914 -4061042))) + (v69 * 65536) + (v68 * 256) + v67 ;end if (v66==(1096 -(709 + 387))) then v67,v68,v69,v70=v1(v16,v19,v19 + (1861 -(673 + 1185)) );v19=v19 + (11 -(6 + 1)) ;v66=3 -2 ;end end end v25=nil;v18=4;end end end vv9(),...);
