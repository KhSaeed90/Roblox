-- More Scripts: https://controlc.com/5572471c

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32,v33=v1(v16,v19,v19 + (5 -3) );v19=v19 + (5 -3) ;return (v33 * (493 -237)) + v32 ;end v18=3;end if (v18==4) then function v25()local v34=v24();local v35=v24();local v36=2 -1 ;local v37=(v21(v35,620 -((735 -(67 + 113)) + 64) ,20) * ((933 -(857 + 74))^(75 -43))) + v34 ;local v38=v21(v35,589 -((900 -533) + 201) ,958 -(214 + 713) );local v39=((v21(v35,9 + 23 )==((1 -0) + 0)) and  -1) or (878 -(282 + 595)) ;if (v38==(1637 -(1523 + 114))) then if (v37==(0 + 0)) then return v39 * 0 ;else v38=1 -0 ;v36=1065 -(68 + 997) ;end elseif (v38==(3317 -(226 + (1916 -872)))) then return ((v37==(0 -0)) and (v39 * ((118 -(32 + 85))/0))) or (v39 * NaN) ;end return v8(v39,v38-(1003 + 20) ) * (v36 + (v37/((1 + 1)^((1359 -(87 + 263)) -(892 + 48 + 17))))) ;end v26=nil;function v26(v40)local v41=0 -0 ;local v42;local v43;while true do if (v41==1) then v42=v3(v16,v19,(v19 + v40) -1 );v19=v19 + v40 ;v41=954 -(802 + 150) ;end if ((0 -(0 -0))==v41) then v42=nil;if  not v40 then local v97=0;while true do if (v97==(0 -0)) then v40=v24();if (v40==(0 + 0)) then return "";end break;end end end v41=998 -(915 + 82) ;end if (v41==(5 -3)) then v43={};for v87=1, #v42 do v43[v87]=v2(v1(v3(v42,v87,v87)));end v41=2 + 1 ;end if (v41==(1190 -(1069 + 118))) then return v6(v43);end end end v18=5;end if (v18==6) then v29=nil;function v29()local v44=0 -0 ;local v45;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v44==3) then v51=nil;while true do local v89=0;local v90;while true do if (v89==(0 -0)) then v90=0;while true do if (v90==(935 -(39 + 896))) then local v98=0;while true do if (v98~=(0 + 0)) then else if (v45==0) then v46={};v47={};v48={};v49={v46,v47,nil,v48};v45=1;end if (v45==(5 -3)) then local v393=0 + 0 ;while true do if (v393~=(0 + 0)) then else for v653=414 -(15 + 398) ,v24() do local v654=0;local v655;while true do if (v654==0) then v655=v22();if (v21(v655,983 -(18 + 964) ,3 -2 )==0) then local v665=396 -(115 + 281) ;local v666;local v667;local v668;local v669;local v670;local v671;while true do if (v665~=1) then else v668=nil;v669=nil;v665=2 + 0 ;end if (v665==(4 -2)) then v670=nil;v671=nil;v665=853 -(20 + 830) ;end if ((3 + 0)==v665) then while true do if (v666==1) then local v675=0 -0 ;while true do if (v675==(3 -2)) then v666=2;break;end if (v675==(867 -(550 + 317))) then v669=nil;v670=nil;v675=1 -0 ;end end end if (v666==(0 -0)) then v667=0 -0 ;v668=nil;v666=286 -(134 + 151) ;end if (v666==2) then v671=nil;while true do if ((1666 -(970 + 695))==v667) then v670=nil;v671=nil;v667=3 -1 ;end if (0~=v667) then else local v677=1990 -(582 + 1408) ;while true do if (v677~=(0 -0)) then else v668=0 -0 ;v669=nil;v677=1 -0 ;end if ((3 -2)==v677) then v667=1825 -(1195 + 629) ;break;end end end if (v667~=2) then else while true do if (v668==(405 -(118 + 287))) then local v678=0;local v679;while true do if (v678~=(0 -0)) then else v679=1121 -(118 + 1003) ;while true do if (v679==(241 -(187 + 54))) then v669=v21(v655,782 -(162 + 618) ,3 + 0 );v670=v21(v655,3 + 1 ,27 -21 );v679=1 -0 ;end if (v679==(1 -0)) then v668=1 + 0 ;break;end end break;end end end if (v668==(980 -(553 + 424))) then if (v21(v670,1 + 2 ,1639 -(1373 + 263) )==(1 + 0)) then v671[4]=v51[v671[1004 -(451 + 549) ]];end v46[v653]=v671;break;end if (v668==2) then local v681=0 + 0 ;local v682;local v683;while true do if (v681~=(0 + 0)) then else v682=0 + 0 ;v683=nil;v681=1 + 0 ;end if (v681~=(2 -1)) then else while true do if (v682~=(0 -0)) then else v683=0 -0 ;while true do if (v683==(1 + 0)) then v668=14 -11 ;break;end if (v683==(753 -(239 + 514))) then local v689=0 + 0 ;while true do if (v689==(0 -0)) then if (v21(v670,1,1385 -(746 + 638) )==(1 + 0)) then v671[2]=v51[v671[2 -0 ]];end if (v21(v670,4 -2 ,1204 -(373 + 829) )==(342 -(218 + 123))) then v671[1584 -(1535 + 46) ]=v51[v671[3 + 0 ]];end v689=1 + 0 ;end if (v689==(1131 -(369 + 761))) then v683=1 + 0 ;break;end end end end break;end end break;end end end if (v668~=(561 -(306 + 254))) then else local v684=0;local v685;while true do if (v684==0) then v685=0 + 0 ;while true do if (v685~=(238 -(64 + 174))) then else local v688=0 -0 ;while true do if (v688~=(1468 -(899 + 568))) then else v685=1 + 0 ;break;end if (v688~=(0 -0)) then else v671={v23(),v23(),nil,nil};if (v669==(572 -(426 + 146))) then local v690=0 + 0 ;local v691;local v692;local v693;while true do if (0~=v690) then else v691=0 + 0 ;v692=nil;v690=1457 -(282 + 1174) ;end if (v690==1) then v693=nil;while true do if (v691==(811 -(569 + 242))) then local v700=0 -0 ;while true do if (v700==(1581 -(1183 + 397))) then v691=1 + 0 ;break;end if (v700~=0) then else v692=1024 -(706 + 318) ;v693=nil;v700=1252 -(721 + 530) ;end end end if (v691==(1272 -(945 + 326))) then while true do if (v692==(0 -0)) then v693=0 + 0 ;while true do if (v693==(700 -(271 + 429))) then v671[3 + 0 ]=v23();v671[1979 -(1913 + 62) ]=v23();break;end end break;end end break;end end break;end end elseif (v669==1) then v671[2 + 1 ]=v24();elseif (v669==(5 -3)) then v671[3]=v24() -((2 + 0)^(60 -44)) ;elseif (v669==(1503 -(1408 + 92))) then local v701=0;local v702;while true do if (0~=v701) then else v702=0 -0 ;while true do if (v702~=(1086 -(461 + 625))) then else v671[1291 -(993 + 295) ]=v24() -((2 -0)^16) ;v671[4]=v23();break;end end break;end end end v688=1;end end end if (v685==(1 + 0)) then v668=5 -3 ;break;end end break;end end end end break;end end break;end end break;end if (v665==(304 -(244 + 60))) then v666=0 + 0 ;v667=nil;v665=477 -(41 + 435) ;end end end break;end end end for v656=1002 -(938 + 63) ,v24() do v47[v656-(1 + 0) ]=v29();end v393=1172 -(418 + 753) ;end if (1==v393) then return v49;end end end v98=1;end if (v98==(1 + 0)) then v90=1;break;end end end if (v90~=(1 + 0)) then else if (v45==1) then local v99=0 + 0 ;local v100;while true do if (v99==0) then v100=0 + 0 ;while true do if (v100==(529 -(406 + 123))) then local v644=1769 -(1749 + 20) ;while true do if (v644==(1 + 0)) then v100=1323 -(1249 + 73) ;break;end if (v644==0) then v50=v24();v51={};v644=1 -0 ;end end end if (v100==(1 + 0)) then for v658=1,v50 do local v659=0;local v660;local v661;local v662;while true do if (v659==(1145 -(466 + 679))) then v660=0 -0 ;v661=nil;v659=1;end if (v659~=(1876 -(157 + 1718))) then else v662=nil;while true do if ((2 -1)==v660) then if (v661==1) then v662=v22()~=0 ;elseif (v661==(1902 -(106 + 1794))) then v662=v25();elseif (v661~=(3 + 0)) then else v662=v26();end v51[v658]=v662;break;end if (v660==(0 + 0)) then local v673=0;local v674;while true do if (v673~=0) then else v674=0 + 0 ;while true do if (v674==(0 -0)) then local v676=0 -0 ;while true do if ((114 -(4 + 110))==v676) then v661=v22();v662=nil;v676=585 -(57 + 527) ;end if ((1428 -(41 + 1386))~=v676) then else v674=1;break;end end end if ((104 -(17 + 86))==v674) then v660=1 -0 ;break;end end break;end end end end break;end end end v49[3 + 0 ]=v22();v100=1 + 1 ;end if ((3 -1)==v100) then v45=5 -3 ;break;end end break;end end end break;end end break;end end end break;end if (v44~=(0 -0)) then else v45=166 -(122 + 44) ;v46=nil;v44=1 -0 ;end if (v44==(3 -2)) then v47=nil;v48=nil;v44=613 -(602 + 9) ;end if (v44==(1191 -(449 + 740))) then v49=nil;v50=nil;v44=3 + 0 ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v52)if (v1(v52,2)==79) then v20=v0(v3(v52,1,1));return "";else local v80=v2(v0(v52,16));if v20 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v5(v80,v20);v20=nil;v91=1;end end else return v80;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v53,v54,v55,v56=v1(v16,v19,v19 + (950 -((685 -(382 + 58)) + 702)) );v19=v19 + (12 -(25 -17)) ;return (v56 * (5393360 + 11383856)) + (v55 * (67434 -(260 + 1638))) + (v54 * 256) + v53 ;end v25=nil;v18=4;end if (v18==7) then function v30(v57,v58,v59)local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...)local v66=v60;local v67=v61;local v68=v62;local v69=v28;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v81=0,v74 do if (v81>=v68) then v72[v81-v68 ]=v73[v81 + 1 ];else v76[v81]=v73[v81 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=29) then if (v79<=14) then if (v79<=6) then if (v79<=2) then if (v79<=0) then local v101=v78[2];v76[v101](v13(v76,v101 + 1 ,v78[3]));elseif (v79==1) then local v117;local v118;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v118=v78[2];v76[v118](v13(v76,v118 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v118=v78[2];v117=v76[v78[3]];v76[v118 + 1 ]=v117;v76[v118]=v117[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v118=v78[2];v76[v118]=v76[v118](v13(v76,v118 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else local v131;local v132;v132=v78[2];v131=v76[v78[3]];v76[v132 + 1 ]=v131;v76[v132]=v131[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v132=v78[2];v76[v132]=v76[v132](v13(v76,v132 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v132=v78[2];v131=v76[v78[3]];v76[v132 + 1 ]=v131;v76[v132]=v131[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=4) then if (v79==3) then local v143=0;local v144;local v145;local v146;local v147;while true do if (v143==2) then for v646=v144,v71 do v147=v147 + 1 ;v76[v646]=v145[v147];end break;end if (v143==0) then v144=v78[2];v145,v146=v69(v76[v144](v76[v144 + 1 ]));v143=1;end if (v143==1) then v71=(v146 + v144) -1 ;v147=0;v143=2;end end else for v394=v78[2],v78[3] do v76[v394]=nil;end end elseif (v79>5) then local v148;local v149;v149=v78[2];v76[v149]=v76[v149](v13(v76,v149 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v149=v78[2];v148=v76[v78[3]];v76[v149 + 1 ]=v148;v76[v149]=v148[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v149=v78[2];v76[v149]=v76[v149](v13(v76,v149 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else local v161=0;local v162;local v163;while true do if (4==v161) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v161=5;end if (v161==5) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];break;end if (v161==0) then v162=nil;v163=nil;v163=v78[2];v162=v76[v78[3]];v76[v163 + 1 ]=v162;v76[v163]=v162[v78[4]];v161=1;end if (v161==3) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v161=4;end if (2==v161) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v161=3;end if (v161==1) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v161=2;end end end elseif (v79<=10) then if (v79<=8) then if (v79>7) then local v164=0;local v165;while true do if (v164==0) then v165=v78[2];v76[v165]=v76[v165](v13(v76,v165 + 1 ,v78[3]));break;end end else local v166=0;local v167;while true do if (v166==0) then v167=nil;v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v166=1;end if (v166==1) then v167=v78[2];v76[v167](v76[v167 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v166=2;end if (4==v166) then v70=v70 + 1 ;v78=v66[v70];v70=v78[3];break;end if (3==v166) then v70=v70 + 1 ;v78=v66[v70];v167=v78[2];v76[v167](v76[v167 + 1 ]);v166=4;end if (v166==2) then v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v166=3;end end end elseif (v79==9) then v76[v78[2]]=v78[3];else v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];end elseif (v79<=12) then if (v79==11) then local v173=0;local v174;local v175;while true do if (v173==4) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v175=v78[2];v76[v175]=v76[v175](v13(v76,v175 + 1 ,v78[3]));v70=v70 + 1 ;v173=5;end if (0==v173) then v174=nil;v175=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v175=v78[2];v173=1;end if (v173==1) then v76[v175](v13(v76,v175 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v173=2;end if (v173==3) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v173=4;end if (v173==5) then v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];break;end if (v173==2) then v175=v78[2];v174=v76[v78[3]];v76[v175 + 1 ]=v174;v76[v175]=v174[v78[4]];v70=v70 + 1 ;v78=v66[v70];v173=3;end end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>13) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else local v181=v78[2];v76[v181](v76[v181 + 1 ]);end elseif (v79<=21) then if (v79<=17) then if (v79<=15) then v76[v78[2]]={};elseif (v79>16) then local v182;local v183;local v184;v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v184=v78[2];v183=v76[v184];v182=v78[3];for v396=1,v182 do v183[v396]=v76[v184 + v396 ];end else local v190=0;local v191;local v192;while true do if (v190==6) then v192=v78[2];v191=v76[v78[3]];v76[v192 + 1 ]=v191;v76[v192]=v191[v78[4]];v190=7;end if (v190==4) then v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v190=5;end if (v190==5) then v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v190=6;end if (v190==8) then v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v190=9;end if (v190==9) then v76[v78[2]][v78[3]]=v78[4];break;end if (v190==7) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v190=8;end if (0==v190) then v191=nil;v192=nil;v192=v78[2];v191=v76[v78[3]];v190=1;end if (v190==1) then v76[v192 + 1 ]=v191;v76[v192]=v191[v78[4]];v70=v70 + 1 ;v78=v66[v70];v190=2;end if (v190==2) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v190=3;end if (v190==3) then v70=v70 + 1 ;v78=v66[v70];v192=v78[2];v76[v192]=v76[v192](v13(v76,v192 + 1 ,v78[3]));v190=4;end end end elseif (v79<=19) then if (v79>18) then do return;end else local v193=0;local v194;local v195;while true do if (v193==4) then v195=v78[2];v194=v76[v78[3]];v76[v195 + 1 ]=v194;v193=5;end if (v193==1) then v70=v70 + 1 ;v78=v66[v70];v195=v78[2];v193=2;end if (v193==6) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v193=7;end if (v193==0) then v194=nil;v195=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v193=1;end if (v193==3) then v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v193=4;end if (v193==5) then v76[v195]=v194[v78[4]];v70=v70 + 1 ;v78=v66[v70];v193=6;end if (v193==8) then v76[v78[2]][v78[3]]=v78[4];break;end if (v193==2) then v76[v195](v13(v76,v195 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v193=3;end if (v193==7) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v193=8;end end end elseif (v79>20) then local v196=0;local v197;local v198;while true do if (v196==0) then v197=nil;v198=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v196=1;end if (v196==1) then v198=v78[2];v76[v198](v13(v76,v198 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v196=2;end if (v196==3) then v76[v198]=v197[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v196=4;end if (v196==5) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v196=6;end if (v196==2) then v70=v70 + 1 ;v78=v66[v70];v198=v78[2];v197=v76[v78[3]];v76[v198 + 1 ]=v197;v196=3;end if (v196==6) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];break;end if (v196==4) then v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v196=5;end end else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79<=25) then if (v79<=23) then if (v79==22) then local v201=v78[2];local v202,v203=v69(v76[v201](v13(v76,v201 + 1 ,v78[3])));v71=(v203 + v201) -1 ;local v204=0;for v399=v201,v71 do v204=v204 + 1 ;v76[v399]=v202[v204];end else local v205;local v206;v206=v78[2];v205=v76[v78[3]];v76[v206 + 1 ]=v205;v76[v206]=v205[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v206=v78[2];v76[v206]=v76[v206](v13(v76,v206 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v206=v78[2];v205=v76[v78[3]];v76[v206 + 1 ]=v205;v76[v206]=v205[v78[4]];v70=v70 + 1 ;v78=v66[v70];v206=v78[2];v205=v76[v78[3]];v76[v206 + 1 ]=v205;v76[v206]=v205[v78[4]];v70=v70 + 1 ;v78=v66[v70];v206=v78[2];v76[v206]=v76[v206](v76[v206 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v206=v78[2];v76[v206](v13(v76,v206 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];do return;end v70=v70 + 1 ;v78=v66[v70];v70=v78[3];end elseif (v79>24) then local v216=v78[2];local v217=v76[v78[3]];v76[v216 + 1 ]=v217;v76[v216]=v217[v78[4]];else local v221=v78[2];local v222=v76[v221];for v402=v221 + 1 ,v78[3] do v7(v222,v76[v402]);end end elseif (v79<=27) then if (v79>26) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v225;local v226;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v226=v78[2];v225=v76[v78[3]];v76[v226 + 1 ]=v225;v76[v226]=v225[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v226=v78[2];v76[v226]=v76[v226](v13(v76,v226 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v226=v78[2];v225=v76[v78[3]];v76[v226 + 1 ]=v225;v76[v226]=v225[v78[4]];end elseif (v79==28) then local v237;local v238;v238=v78[2];v237=v76[v78[3]];v76[v238 + 1 ]=v237;v76[v238]=v237[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else v70=v78[3];end elseif (v79<=44) then if (v79<=36) then if (v79<=32) then if (v79<=30) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];elseif (v79>31) then local v250;local v251;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v251=v78[2];v76[v251](v13(v76,v251 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v251=v78[2];v250=v76[v78[3]];v76[v251 + 1 ]=v250;v76[v251]=v250[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else v59[v78[3]]=v76[v78[2]];end elseif (v79<=34) then if (v79>33) then local v266=v78[2];v76[v266]=v76[v266](v13(v76,v266 + 1 ,v71));elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>35) then local v268;local v269;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v268=v76[v78[3]];v76[v269 + 1 ]=v268;v76[v269]=v268[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v76[v269]=v76[v269](v13(v76,v269 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v76[v269](v13(v76,v269 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v268=v76[v78[3]];v76[v269 + 1 ]=v268;v76[v269]=v268[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v76[v269]=v76[v269](v13(v76,v269 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v269=v78[2];v76[v269](v13(v76,v269 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v70=v78[3];else local v280;local v281;v281=v78[2];v280=v76[v78[3]];v76[v281 + 1 ]=v280;v76[v281]=v280[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v281=v78[2];v76[v281]=v76[v281](v13(v76,v281 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v281=v78[2];v280=v76[v78[3]];v76[v281 + 1 ]=v280;v76[v281]=v280[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v76[v78[4]]];v70=v70 + 1 ;v78=v66[v70];v281=v78[2];v280=v76[v78[3]];v76[v281 + 1 ]=v280;v76[v281]=v280[v78[4]];v70=v70 + 1 ;v78=v66[v70];v281=v78[2];v76[v281]=v76[v281](v76[v281 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v281=v78[2];v76[v281](v13(v76,v281 + 1 ,v78[3]));end elseif (v79<=40) then if (v79<=38) then if (v79>37) then local v293;local v294;v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v294=v78[2];v76[v294](v76[v294 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v294=v78[2];v293=v76[v78[3]];v76[v294 + 1 ]=v293;v76[v294]=v293[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v294=v78[2];v76[v294](v13(v76,v294 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v70=v78[3];else v76[v78[2]]=v30(v67[v78[3]],nil,v59);end elseif (v79>39) then if (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else local v307=v78[2];v76[v307]=v76[v307](v76[v307 + 1 ]);end elseif (v79<=42) then if (v79==41) then local v309;local v310,v311;local v312;local v313;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v313=v78[2];v312=v76[v78[3]];v76[v313 + 1 ]=v312;v76[v313]=v312[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v313=v78[2];v310,v311=v69(v76[v313](v13(v76,v313 + 1 ,v78[3])));v71=(v311 + v313) -1 ;v309=0;for v403=v313,v71 do v309=v309 + 1 ;v76[v403]=v310[v309];end v70=v70 + 1 ;v78=v66[v70];v313=v78[2];v76[v313]=v76[v313](v13(v76,v313 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v313=v78[2];v76[v313]=v76[v313]();v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v313=v78[2];v312=v76[v78[3]];v76[v313 + 1 ]=v312;v76[v313]=v312[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};else local v323;local v324;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v324=v78[2];v323=v76[v78[3]];v76[v324 + 1 ]=v323;v76[v324]=v323[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v324=v78[2];v76[v324]=v76[v324](v13(v76,v324 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end end elseif (v79>43) then v76[v78[2]]=v59[v78[3]];else local v335=v78[2];local v336=v78[4];local v337=v335 + 2 ;local v338={v76[v335](v76[v335 + 1 ],v76[v337])};for v406=1,v336 do v76[v337 + v406 ]=v338[v406];end local v339=v338[1];if v339 then v76[v337]=v339;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79<=51) then if (v79<=47) then if (v79<=45) then local v106;local v107;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v107=v78[2];v106=v76[v78[3]];v76[v107 + 1 ]=v106;v76[v107]=v106[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v107=v78[2];v76[v107]=v76[v107](v13(v76,v107 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==46) then local v341=v78[2];local v342={v76[v341](v76[v341 + 1 ])};local v343=0;for v409=v341,v78[4] do v343=v343 + 1 ;v76[v409]=v342[v343];end else local v344;local v345;local v346;local v347;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v347=v78[2];v346=v76[v78[3]];v76[v347 + 1 ]=v346;v76[v347]=v346[v78[4]];v70=v70 + 1 ;v78=v66[v70];v347=v78[2];v345={v76[v347](v76[v347 + 1 ])};v344=0;for v412=v347,v78[4] do local v413=0;while true do if (v413==0) then v344=v344 + 1 ;v76[v412]=v345[v344];break;end end end v70=v70 + 1 ;v78=v66[v70];v70=v78[3];end elseif (v79<=49) then if (v79>48) then local v357=0;local v358;while true do if (v357==0) then v358=v78[2];v76[v358]=v76[v358]();break;end end else local v359=v78[2];local v360=v76[v359];local v361=v78[3];for v414=1,v361 do v360[v414]=v76[v359 + v414 ];end end elseif (v79>50) then local v362=0;local v363;local v364;local v365;local v366;local v367;while true do if (v362==2) then v76[v367]=v366[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v362=3;end if (v362==7) then v367=v78[2];v366=v76[v78[3]];v76[v367 + 1 ]=v366;v76[v367]=v366[v78[4]];v70=v70 + 1 ;v362=8;end if (v362==9) then for v651=v367,v71 do local v652=0;while true do if (v652==0) then v363=v363 + 1 ;v76[v651]=v364[v363];break;end end end v70=v70 + 1 ;v78=v66[v70];v367=v78[2];v76[v367](v13(v76,v367 + 1 ,v71));break;end if (v362==3) then v78=v66[v70];v367=v78[2];v366=v76[v78[3]];v76[v367 + 1 ]=v366;v76[v367]=v366[v78[4]];v362=4;end if (6==v362) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v362=7;end if (v362==8) then v78=v66[v70];v367=v78[2];v364,v365=v69(v76[v367](v76[v367 + 1 ]));v71=(v365 + v367) -1 ;v363=0;v362=9;end if (v362==5) then v367=v78[2];v76[v367]=v76[v367](v13(v76,v367 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v362=6;end if (v362==0) then v363=nil;v364,v365=nil;v366=nil;v367=nil;v76[v78[2]]=v76[v78[3]][v78[4]];v362=1;end if (v362==4) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v362=5;end if (v362==1) then v70=v70 + 1 ;v78=v66[v70];v367=v78[2];v366=v76[v78[3]];v76[v367 + 1 ]=v366;v362=2;end end else v76[v78[2]]();end elseif (v79<=55) then if (v79<=53) then if (v79==52) then v76[v78[2]]=v76[v78[3]];else local v370;local v371;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v371=v78[2];v370=v76[v78[3]];v76[v371 + 1 ]=v370;v76[v371]=v370[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v371=v78[2];v76[v371]=v76[v371](v13(v76,v371 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];if (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end end elseif (v79==54) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v382=0;local v383;while true do if (v382==0) then v383=v78[2];v76[v383](v13(v76,v383 + 1 ,v71));break;end end end elseif (v79<=57) then if (v79==56) then local v384=0;local v385;while true do if (0==v384) then v385=nil;v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v384=1;end if (v384==3) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v384=4;end if (v384==1) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v385=v78[2];v384=2;end if (v384==2) then v76[v385]=v76[v385](v13(v76,v385 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v384=3;end if (4==v384) then v78=v66[v70];v70=v78[3];break;end end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79==58) then local v388=0;local v389;local v390;while true do if (v388==3) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v388=4;end if (v388==1) then v76[v390](v13(v76,v390 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v388=2;end if (v388==2) then v390=v78[2];v389=v76[v78[3]];v76[v390 + 1 ]=v389;v76[v390]=v389[v78[4]];v70=v70 + 1 ;v78=v66[v70];v388=3;end if (v388==0) then v389=nil;v390=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v390=v78[2];v388=1;end if (v388==5) then v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];break;end if (4==v388) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v390=v78[2];v76[v390]=v76[v390](v13(v76,v390 + 1 ,v78[3]));v70=v70 + 1 ;v388=5;end end else v76[v78[2]][v78[3]]=v78[4];end v70=v70 + 1 ;end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v63,v64,v65)if v65 then local v84=0 + 0 ;local v85;while true do if (v84==0) then v85=(v63/(2^(v64-(1 -0))))%((5 -3)^(((v65-((1889 -(483 + 200)) -(902 + (1766 -(1404 + 59))))) -(v64-1)) + 1)) ;return v85-(v85%((2 -1) -0)) ;end end else local v86=(4 -2)^(v64-(1 + 0)) ;return (((v63%(v86 + v86))>=v86) and (1691 -(1121 + 569))) or (214 -(22 + (257 -65))) ;end end v22=nil;v18=2;end end end vv9(),...);
